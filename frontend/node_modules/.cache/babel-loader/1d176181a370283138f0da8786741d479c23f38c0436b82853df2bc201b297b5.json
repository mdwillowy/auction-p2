{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/items';\nconst AUTH_URL = '/api/auth';\nconst api = {\n  getItems: async () => {\n    console.log('Making request to:', API_URL);\n    const response = await axios.get(API_URL);\n    console.log('Response:', {\n      status: response.status,\n      data: response.data\n    });\n    return response;\n  },\n  getItemById: async id => {\n    return await axios.get(`${API_URL}/${id}`);\n  },\n  createItem: async data => {\n    return await axios.post(API_URL, data);\n  },\n  placeBid: async (itemId, amount) => {\n    return await axios.post(`${API_URL}/${itemId}/bid`, {\n      amount\n    });\n  },\n  login: async (email, password) => {\n    return await axios.post(`${AUTH_URL}/login`, {\n      email,\n      password\n    });\n  },\n  register: async (username, email, password) => {\n    return await axios.post(`${AUTH_URL}/register`, {\n      username,\n      email,\n      password\n    });\n  },\n  getCurrentUser: async () => {\n    return await axios.get(`${AUTH_URL}/me`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","AUTH_URL","api","getItems","console","log","response","get","status","data","getItemById","id","createItem","post","placeBid","itemId","amount","login","email","password","register","username","getCurrentUser","headers","Authorization","localStorage","getItem"],"sources":["/Users/mdwillowy/Desktop/Coding/untitled folder 55/blackboxai-1743951474202/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/items';\nconst AUTH_URL = '/api/auth';\n\nconst api = {\n  getItems: async () => {\n    console.log('Making request to:', API_URL);\n    const response = await axios.get(API_URL);\n    console.log('Response:', {\n      status: response.status,\n      data: response.data\n    });\n    return response;\n  },\n  getItemById: async (id) => {\n    return await axios.get(`${API_URL}/${id}`);\n  },\n  createItem: async (data) => {\n    return await axios.post(API_URL, data);\n  },\n  placeBid: async (itemId, amount) => {\n    return await axios.post(`${API_URL}/${itemId}/bid`, { amount });\n  },\n  login: async (email, password) => {\n    return await axios.post(`${AUTH_URL}/login`, { email, password });\n  },\n  register: async (username, email, password) => {\n    return await axios.post(`${AUTH_URL}/register`, { username, email, password });\n  },\n  getCurrentUser: async () => {\n    return await axios.get(`${AUTH_URL}/me`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  }\n};\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,YAAY;AAC5B,MAAMC,QAAQ,GAAG,WAAW;AAE5B,MAAMC,GAAG,GAAG;EACVC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,OAAO,CAAC;IAC1C,MAAMM,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,OAAO,CAAC;IACzCI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;MACvBG,MAAM,EAAEF,QAAQ,CAACE,MAAM;MACvBC,IAAI,EAAEH,QAAQ,CAACG;IACjB,CAAC,CAAC;IACF,OAAOH,QAAQ;EACjB,CAAC;EACDI,WAAW,EAAE,MAAOC,EAAE,IAAK;IACzB,OAAO,MAAMZ,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,IAAIW,EAAE,EAAE,CAAC;EAC5C,CAAC;EACDC,UAAU,EAAE,MAAOH,IAAI,IAAK;IAC1B,OAAO,MAAMV,KAAK,CAACc,IAAI,CAACb,OAAO,EAAES,IAAI,CAAC;EACxC,CAAC;EACDK,QAAQ,EAAE,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;IAClC,OAAO,MAAMjB,KAAK,CAACc,IAAI,CAAC,GAAGb,OAAO,IAAIe,MAAM,MAAM,EAAE;MAAEC;IAAO,CAAC,CAAC;EACjE,CAAC;EACDC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,OAAO,MAAMpB,KAAK,CAACc,IAAI,CAAC,GAAGZ,QAAQ,QAAQ,EAAE;MAAEiB,KAAK;MAAEC;IAAS,CAAC,CAAC;EACnE,CAAC;EACDC,QAAQ,EAAE,MAAAA,CAAOC,QAAQ,EAAEH,KAAK,EAAEC,QAAQ,KAAK;IAC7C,OAAO,MAAMpB,KAAK,CAACc,IAAI,CAAC,GAAGZ,QAAQ,WAAW,EAAE;MAAEoB,QAAQ;MAAEH,KAAK;MAAEC;IAAS,CAAC,CAAC;EAChF,CAAC;EACDG,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,OAAO,MAAMvB,KAAK,CAACQ,GAAG,CAAC,GAAGN,QAAQ,KAAK,EAAE;MACvCsB,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MACxD;IACF,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAexB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}